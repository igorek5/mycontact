{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/UserDialog/UserDialog.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/UserDialog/UserDialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","UserDialog","props","className","s","item","to","id","activeClassName","active","link","name","image","Message","text","maxLengt20","maxLenghtValidator","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","Dialogs","newDialogs","messagesPage","dialogs","map","d","key","newMessages","message","m","wrapper","dialog__user","messages","formData","console","log","addMessage","compose","connect","state","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,sBAAsB,SAAW,4B,oBCArOD,EAAOC,QAAU,CAAC,aAAe,iCAAiC,KAAO,yBAAyB,OAAS,2BAA2B,KAAO,yBAAyB,KAAO,2B,oBCA7KD,EAAOC,QAAU,CAAC,KAAO,wB,wGCcVC,EAXI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAEC,MACd,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAIC,gBAAiBJ,IAAEK,OAAQN,UAAWC,IAAEM,MACzE,uBAAGP,UAAWC,IAAEO,MAAOT,EAAMS,MAC7B,yBAAKR,UAAWC,IAAEQ,W,kBCEnBC,EARC,SAACX,GACb,OACI,yBAAKC,UAAWC,IAAEC,MACd,uBAAGF,UAAWC,IAAEU,MAAOZ,EAAMY,Q,iCCEnCC,EAAaC,YAAmB,IAWhCC,EAAkBC,YAAU,CAC9BC,KAAM,iBADcD,EATL,SAAChB,GAChB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUb,KAAM,UAAWc,SAAU,CAACC,IAAeX,KACvE,4BAAQZ,UAAU,UAAlB,mBAsDGwB,EA1CC,SAACzB,GACb,IAKI0B,EAAa1B,EAAM2B,aAAaC,QAAQC,KAAI,SAAAC,GAAC,OAAK,kBAAC,EAAD,CAAYzB,GAAIyB,EAAEzB,GAAII,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAEzB,QAE7F2B,EAAchC,EAAM2B,aAAaM,QAAQJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAStB,KAAMsB,EAAED,QAASF,IAAKG,EAAE7B,QAWvF,OAEI,yBAAKJ,UAAWC,IAAEiC,SACd,yBAAKlC,UAAWC,IAAEkC,cAEbV,GAIL,yBAAKzB,UAAWC,IAAEmC,UACbL,EACD,6BACI,kBAACjB,EAAD,CAAiBG,SA9BlB,SAACoB,GACZC,QAAQC,IAAIF,GACZtC,EAAMyC,WAAWH,EAASL,gB,gCCPnBS,sBACXC,aAfkB,SAACC,GACnB,MAAO,CACHjB,aAAciB,EAAMjB,iBAIH,SAACkB,GACtB,MAAO,CACHJ,WAAY,SAAC7B,GACTiC,EAAUC,YAAwBlC,SAO1CmC,IAFWL,CAGbjB","file":"static/js/3.21482389.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__2n65M\",\"dialog__user\":\"Dialogs_dialog__user__3QMDn\",\"link\":\"Dialogs_link__1GqrO\",\"active\":\"Dialogs_active__Is3BT\",\"item\":\"Dialogs_item__sG4v8\",\"name\":\"Dialogs_name__1QhKO\",\"messages\":\"Dialogs_messages__WNxPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog__user\":\"UserDialog_dialog__user__1La2m\",\"link\":\"UserDialog_link__FZFev\",\"active\":\"UserDialog_active__qLuDv\",\"item\":\"UserDialog_item__3779y\",\"name\":\"UserDialog_name__1RgQj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Message_text__14EGU\"};","import React from 'react';\r\nimport s from './UserDialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst UserDialog = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={s.active} className={s.link}>\r\n                <p className={s.name}>{props.name}</p>\r\n                <img className={s.image}/>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDialog;","import React from 'react';\r\nimport s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <p className={s.text}>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport UserDialog from \"./UserDialog/UserDialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLenghtValidator, requiredField} from \"../utils/validators/Validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst maxLengt20 = maxLenghtValidator(20);\r\n\r\nconst DialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'message'} validate={[requiredField, maxLengt20]}></Field>\r\n            <button className='button'>new massage</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogReduxForm = reduxForm({\r\n    form: 'dialogMessage'\r\n})(DialogForm);\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let onSubmit = (formData) => {\r\n        console.log(formData);\r\n        props.addMessage(formData.message);\r\n    }\r\n\r\n    let newDialogs = props.messagesPage.dialogs.map(d => (<UserDialog id={d.id} name={d.name} key={d.id}/>));\r\n\r\n    let newMessages = props.messagesPage.message.map(m => <Message text={m.message} key={m.id}/>);\r\n\r\n\r\n    /*let addMessage = () => {\r\n        props.addMessage();\r\n    }\r\n\r\n    let onMessageChenge = (e) => {\r\n        let text = e.target.value;\r\n        props.updateNewMessageText(text);\r\n    }*/\r\n    return (\r\n\r\n        <div className={s.wrapper}>\r\n            <div className={s.dialog__user}>\r\n\r\n                {newDialogs}\r\n\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n                {newMessages}\r\n                <div>\r\n                    <DialogReduxForm onSubmit={onSubmit}/>\r\n                    {/*<textarea onChange={onMessageChenge} value={props.messagesPage.newMessageText}></textarea>\r\n                    <button onClick={addMessage} className='button'>new massage</button>*/}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMessageActionCreator} from \"../redux/messages_reducer\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (text) => {\r\n            dispatch( addMessageActionCreator(text) );\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n\r\n\r\n/*\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (AuthRedirectComponent);\r\n\r\n\r\nexport default DialogsContainer;*/\r\n"],"sourceRoot":""}